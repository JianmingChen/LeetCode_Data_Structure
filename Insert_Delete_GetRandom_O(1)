class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.val_to_idx = {}  # Dictionary to store value -> index mapping
        self.values = []      # List to store actual values
        
    def insert(self, val: int) -> bool:
        """
        Inserts value if not present. Returns true if the value was not present.
        """
        if val in self.val_to_idx:
            return False
        
        # Add value to the end of list and store its index
        self.values.append(val)
        self.val_to_idx[val] = len(self.values) - 1
        return True
        
    def remove(self, val: int) -> bool:
        """
        Removes value if present. Returns true if the value was present.
        """
        if val not in self.val_to_idx:
            return False
        
        # Get index of value to remove
        idx = self.val_to_idx[val]
        last_val = self.values[-1]
        
        # Move last element to the position of element to remove
        self.values[idx] = last_val
        self.val_to_idx[last_val] = idx
        
        # Remove the last element and the value from dictionary
        self.values.pop()
        del self.val_to_idx[val]
        return True

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        import random
        return random.choice(self.values)
        